/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  RiddleQuestHub,
  RiddleQuestHubInterface,
} from "../../RiddleQuestHub.sol/RiddleQuestHub";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IVerifier",
        name: "_verifier",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "questId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "solver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "ok",
        type: "bool",
      },
    ],
    name: "ProofAttempt",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "questId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "bounty",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "QuestCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "questId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "solver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "bounty",
        type: "uint256",
      },
    ],
    name: "QuestSolved",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_title",
        type: "string",
      },
      {
        internalType: "string",
        name: "_prompt",
        type: "string",
      },
      {
        internalType: "bytes32",
        name: "_solutionHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_deadline",
        type: "uint256",
      },
    ],
    name: "createRiddle",
    outputs: [
      {
        internalType: "uint256",
        name: "questId",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "questId",
        type: "uint256",
      },
    ],
    name: "getQuest",
    outputs: [
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        internalType: "string",
        name: "prompt",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "bounty",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "_status",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "winner",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "solutionHash",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextQuestId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "questId",
        type: "uint256",
      },
    ],
    name: "status",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "questId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "proof",
        type: "bytes",
      },
    ],
    name: "submitProof",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "verifier",
    outputs: [
      {
        internalType: "contract IVerifier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a0604052348015600f57600080fd5b50604051610da2380380610da2833981016040819052602c91603c565b6001600160a01b0316608052606a565b600060208284031215604d57600080fd5b81516001600160a01b0381168114606357600080fd5b9392505050565b608051610d1761008b60003960008181606c01526106a70152610d176000f3fe6080604052600436106100555760003560e01c80632b7ac3f31461005a57806342d21ef7146100ab57806349f86f34146100dd578063b90d1aed14610110578063c244a7b914610131578063d638c98314610153575b600080fd5b34801561006657600080fd5b5061008e7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156100b757600080fd5b506100cb6100c63660046108a3565b610169565b60405160ff90911681526020016100a2565b3480156100e957600080fd5b506100fd6100f83660046108a3565b6101c1565b6040516100a29796959493929190610902565b61012361011e3660046109a6565b610346565b6040519081526020016100a2565b34801561013d57600080fd5b5061015161014c366004610a27565b6105a1565b005b34801561015f57600080fd5b5061012360005481565b60008181526001602052604081206005810154600160a01b900460ff16156101945750600192915050565b6004810154158015906101aa5750806004015442115b156101b85750600292915050565b50600092915050565b606080600080600080600080600160008a815260200190815260200160002090508060000181600101826003015483600401546101fd8d610169565b6005860154600287015486546001600160a01b0390921691879061022090610a72565b80601f016020809104026020016040519081016040528092919081815260200182805461024c90610a72565b80156102995780601f1061026e57610100808354040283529160200191610299565b820191906000526020600020905b81548152906001019060200180831161027c57829003601f168201915b505050505096508580546102ac90610a72565b80601f01602080910402602001604051908101604052809291908181526020018280546102d890610a72565b80156103255780601f106102fa57610100808354040283529160200191610325565b820191906000526020600020905b81548152906001019060200180831161030857829003601f168201915b50505050509550975097509750975097509750975050919395979092949650565b600080341161038e5760405162461bcd60e51b815260206004820152600f60248201526e109bdd5b9d1e481c995c5d5a5c9959608a1b60448201526064015b60405180910390fd5b826103d45760405162461bcd60e51b815260206004820152601660248201527514dbdb1d5d1a5bdb881a185cda081c995c5d5a5c995960521b6044820152606401610385565b811561041c5742821161041c5760405162461bcd60e51b815260206004820152601060248201526f111958591b1a5b99481a5b881c185cdd60821b6044820152606401610385565b600080815461042a90610aac565b9182905550604080516101006020601f8b01819004028201810190925260e081018981529293509182918a908a9081908501838280828437600092019190915250505090825250604080516020601f8901819004810282018101909252878152918101919088908890819084018382808284376000920182905250938552505050602080830187905234604080850191909152606084018790526080840183905260a09093018290528482526001905220815181906104e99082610b38565b50602082015160018201906104fe9082610b38565b506040828101516002830155606083015160038301556080830151600483015560a08301516005909201805460c0909401511515600160a01b026001600160a81b03199094166001600160a01b03909316929092179290921790555181907f081a3e146b56e9690728c0eb05145923b1d36a59d7dc8175ad7133d1aef84f369061058f908a908a9034908890610c1f565b60405180910390a29695505050505050565b60008381526001602052604090206005810154600160a01b900460ff16156105fa5760405162461bcd60e51b815260206004820152600c60248201526b145d595cdd081cdbdb1d995960a21b6044820152606401610385565b6004810154156106485780600401544211156106485760405162461bcd60e51b815260206004820152600d60248201526c145d595cdd08195e1c1a5c9959609a1b6044820152606401610385565b6040805160018082528183019092526000916020808301908036833701905050905081600201548160008151811061068257610682610c46565b6020908102919091010152604051633a94343960e21b81526000906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063ea50d0e4906106e090889088908790600401610c5c565b602060405180830381865afa1580156106fd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107219190610cb8565b9050336001600160a01b0316867f6ed945f34992384b75bc1afbdb6ffecaa767a01fd3987cee5270e0b83747069d83604051610761911515815260200190565b60405180910390a3806107ac5760405162461bcd60e51b815260206004820152601360248201527215995c9a599a58d85d1a5bdb8819985a5b1959606a1b6044820152606401610385565b6005830180546001600160a81b03191633908117600160a01b17909155600384015460405188917f9bea200456b22fe4d402573b0e679cecac5011a2c1755db22b42b4167295903d9161080191815260200190565b60405180910390a3600383015460405160009133918381818185875af1925050503d806000811461084e576040519150601f19603f3d011682016040523d82523d6000602084013e610853565b606091505b505090508061089a5760405162461bcd60e51b8152602060048201526013602482015272115512081d1c985b9cd9995c8819985a5b1959606a1b6044820152606401610385565b50505050505050565b6000602082840312156108b557600080fd5b5035919050565b6000815180845260005b818110156108e2576020818501810151868301820152016108c6565b506000602082860101526020601f19601f83011685010191505092915050565b60e08152600061091560e083018a6108bc565b8281036020840152610927818a6108bc565b60408401989098525050606081019490945260ff9290921660808401526001600160a01b031660a083015260c09091015292915050565b60008083601f84011261097057600080fd5b5081356001600160401b0381111561098757600080fd5b60208301915083602082850101111561099f57600080fd5b9250929050565b600080600080600080608087890312156109bf57600080fd5b86356001600160401b038111156109d557600080fd5b6109e189828a0161095e565b90975095505060208701356001600160401b03811115610a0057600080fd5b610a0c89828a0161095e565b979a9699509760408101359660609091013595509350505050565b600080600060408486031215610a3c57600080fd5b8335925060208401356001600160401b03811115610a5957600080fd5b610a658682870161095e565b9497909650939450505050565b600181811c90821680610a8657607f821691505b602082108103610aa657634e487b7160e01b600052602260045260246000fd5b50919050565b600060018201610acc57634e487b7160e01b600052601160045260246000fd5b5060010190565b634e487b7160e01b600052604160045260246000fd5b601f821115610b3357806000526020600020601f840160051c81016020851015610b105750805b601f840160051c820191505b81811015610b305760008155600101610b1c565b50505b505050565b81516001600160401b03811115610b5157610b51610ad3565b610b6581610b5f8454610a72565b84610ae9565b6020601f821160018114610b995760008315610b815750848201515b600019600385901b1c1916600184901b178455610b30565b600084815260208120601f198516915b82811015610bc95787850151825560209485019460019092019101610ba9565b5084821015610be75786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b606081526000610c33606083018688610bf6565b6020830194909452506040015292915050565b634e487b7160e01b600052603260045260246000fd5b604081526000610c70604083018587610bf6565b828103602084015280845180835260208301915060208601925060005b81811015610cab578351835260209384019390920191600101610c8d565b5090979650505050505050565b600060208284031215610cca57600080fd5b81518015158114610cda57600080fd5b939250505056fea26469706673582212204a241611856e1076488f8d06a130b626934b9882eece80efb9d555aa50784ea864736f6c634300081c0033";

type RiddleQuestHubConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RiddleQuestHubConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RiddleQuestHub__factory extends ContractFactory {
  constructor(...args: RiddleQuestHubConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _verifier: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_verifier, overrides || {});
  }
  override deploy(
    _verifier: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_verifier, overrides || {}) as Promise<
      RiddleQuestHub & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): RiddleQuestHub__factory {
    return super.connect(runner) as RiddleQuestHub__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RiddleQuestHubInterface {
    return new Interface(_abi) as RiddleQuestHubInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): RiddleQuestHub {
    return new Contract(address, _abi, runner) as unknown as RiddleQuestHub;
  }
}
