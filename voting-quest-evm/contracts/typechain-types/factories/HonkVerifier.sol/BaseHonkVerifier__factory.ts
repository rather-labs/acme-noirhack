/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  BaseHonkVerifier,
  BaseHonkVerifierInterface,
} from "../../HonkVerifier.sol/BaseHonkVerifier";

const _abi = [
  {
    inputs: [],
    name: "ProofLengthWrong",
    type: "error",
  },
  {
    inputs: [],
    name: "PublicInputsLengthWrong",
    type: "error",
  },
  {
    inputs: [],
    name: "ShpleminiFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "SumcheckFailed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "proof",
        type: "bytes",
      },
      {
        internalType: "bytes32[]",
        name: "publicInputs",
        type: "bytes32[]",
      },
    ],
    name: "verify",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class BaseHonkVerifier__factory {
  static readonly abi = _abi;
  static createInterface(): BaseHonkVerifierInterface {
    return new Interface(_abi) as BaseHonkVerifierInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): BaseHonkVerifier {
    return new Contract(address, _abi, runner) as unknown as BaseHonkVerifier;
  }
}
